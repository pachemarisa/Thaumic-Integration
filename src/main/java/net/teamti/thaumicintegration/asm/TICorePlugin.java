package net.teamti.thaumicintegration.asm;

import java.io.File;
import java.util.Arrays;
import java.util.Map;
import java.util.logging.Logger;

import net.teamti.thaumicintegration.asm.helper.PropertyManager;
import net.teamti.thaumicintegration.asm.helper.PropertyManager.PropAccessException;
import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.FMLLog;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.relauncher.IFMLCallHook;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin;

public class TICorePlugin extends DummyModContainer implements IFMLLoadingPlugin
{
	private final String[] asmTransformers = new String[] { "net.teamti.thaumicintegration.asm.TITransformer", "net.teamti.thaumicintegration.asm.ASMInterfaceRepair" };

	private final ModMetadata md = new ModMetadata();

	public static Logger logger = Logger.getLogger("ThaumicIntegration-Preloader");

	public static File location;

	public TICorePlugin()
	{
		logger.setParent(FMLLog.getLogger());
		logger.info("Constructing preloader (Modules: " + Arrays.toString(asmTransformers) + ")");
		try
		{
			PropertyManager.getOrCreateProps();
		}
		catch (PropAccessException ex)
		{
			logger.severe("Could not get or create properties file! Assuming defaults.");
			logger.severe(Arrays.toString(ex.getStackTrace()));
		}

		md.autogenerated = true;
		md.modId = getModId();
		md.version = getVersion();
		md.name = getName();
		md.authorList = Arrays.asList("alexbegt", "Drullkus", "DSMario64");
	}

	@Override
	public String getModId()
	{
		return "ThaumicIntegration-Preloader";
	}

	@Override
	public String getName()
	{
		return "Thaumic Integration PreLoader";
	}

	@Override
	public String getVersion()
	{
		return "0.0.0.0";
	}

	@Override
	public String getDisplayVersion()
	{
		return getVersion();
	}

	@Override
	public ModMetadata getMetadata()
	{
		return md;
	}

	public String[] getLibraryRequestClass()
	{
		return null;
	}

	@Override
	public String[] getASMTransformerClass()
	{
		return asmTransformers;
	}

	@Override
	public String getModContainerClass()
	{
		return "net.teamti.thaumicintegration.asm.TICorePlugin";
	}

	@Override
	public String getSetupClass()
	{
		return null;
	}

	@Override
	public void injectData(Map<String, Object> data)
	{
		location = (File) data.get("coremodLocation");
	}

}
